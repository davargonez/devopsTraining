# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  System.Debug: true
stages:
- stage: CompileAPP
  jobs:
    - job:  Build_Angular_App
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '12.22.3'
        displayName: 'Install Node.js'
      - task: Npm@1
        displayName: 'Install Angular/CLI'
        inputs:
          command: custom
          workingDir: frontend
          verbose: false
          customCommand: 'install -g @angular/cli'
      - task: Npm@1
        displayName: 'Install Dependencies'
        inputs:
          workingDir: frontend
          verbose: false
      - task: Npm@1
        displayName: 'Build App'
        inputs:
          command: custom
          workingDir: frontend
          verbose: false
          customCommand: 'run build'
      - task: CopyFiles@2
        displayName: 'Copy k8s Frontend Files'
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/kubernetes'
          Contents: |
            deploymentFront.yml
            deploymentApp.yml
          TargetFolder: '$(System.DefaultWorkingDirectory)/kubernetesfront'
      - task: ArchiveFiles@2
        displayName: 'Archive dist files'
        inputs:
          rootFolderOrFile: frontend/dist
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)_frontend.zip'
          replaceExistingArchive: true
      - task: PublishPipelineArtifact@1
        displayName: 'Publish Pipeline Artifact'
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/frontend'
          artifact: 'frontApp'
          publishLocation: 'pipeline'
      - task: PublishPipelineArtifact@1
        displayName: 'Publish Pipeline k8s Frontend Artifact'
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/kubernetesfront'
          artifact: 'frontk8s'
          publishLocation: 'pipeline'
      - task: DownloadPipelineArtifact@2
        displayName: 'Download Pipeline Artifact'
        inputs:
          targetPath: '${Build.ArtifactStagingDirectory}/frontend'
      - task: DownloadPipelineArtifact@2
        displayName: 'Download Pipeline k8s Frontend Artifact'
        inputs:
          targetPath: '${Build.ArtifactStagingDirectory}/kubernetesfront'
    - job:  Build_Node_Express_App
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '12.22.3'
        displayName: 'Install Node.js'    
      - task: Npm@1
        displayName: 'Install Dependencies'
        inputs:
          workingDir: backend
          verbose: false
      - task: CopyFiles@2
        displayName: 'Copy Backend Files'
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/backend'
          Contents: |
            model/**
            routes/**
            app.js
            Dockerfile
            package.json
            package-lock.json
          TargetFolder: '$(System.DefaultWorkingDirectory)/backend'
      - task: CopyFiles@2
        displayName: 'Copy k8s Backend Files'
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/kubernetes'
          Contents: |
            deploymentBack.yml
            deploymentApp.yml
          TargetFolder: '$(System.DefaultWorkingDirectory)/kubernetesback'
      - task: ArchiveFiles@2
        displayName: 'Archive node files'
        inputs:
          rootFolderOrFile: backend
          includeRootFolder: true
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)_backend.zip'
          replaceExistingArchive: true
      - task: PublishPipelineArtifact@1
        displayName: 'Publish Pipeline Backend Artifact'
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/backend'
          artifact: 'backApp'
          publishLocation: 'pipeline'
      - task: PublishPipelineArtifact@1
        displayName: 'Publish Pipeline k8s Backend Artifact'
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/kubernetesback'
          artifact: 'backk8s'
          publishLocation: 'pipeline'
      - task: DownloadPipelineArtifact@2
        displayName: 'Download Pipeline Artifact'
        inputs:
          targetPath: '${Build.ArtifactStagingDirectory}/backend'
      - task: DownloadPipelineArtifact@2
        displayName: 'Download Pipeline k8s Backend Artifact'
        inputs:
          targetPath: '${Build.ArtifactStagingDirectory}/kubernetesback'
- stage: ValidateDockerfiles
  dependsOn: CompileAPP
  jobs:
  - job:  Validate
    pool:
        vmImage: ubuntu-latest
    steps:
    - script: cat $(Build.SourcesDirectory)/backend/Dockerfile
    - script: cat $(Build.SourcesDirectory)/frontend/Dockerfile
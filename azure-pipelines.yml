# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
  - job:  Build_Angular_App
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.22.3'
      displayName: 'Install Node.js'
    - task: Npm@1
      displayName: 'Install Angular/CLI'
      inputs:
        command: custom
        workingDir: frontend
        verbose: false
        customCommand: 'install -g @angular/cli'
    - task: Npm@1
      displayName: 'Install Dependencies'
      inputs:
        workingDir: frontend
        verbose: false
    - task: Npm@1
      displayName: 'Build App'
      inputs:
        command: custom
        workingDir: frontend
        verbose: false
        customCommand: 'run build'
    - task: ArchiveFiles@2
      displayName: 'Archive dist files'
      inputs:
        rootFolderOrFile: dist
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)_frontend.zip'
        replaceExistingArchive: true
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifact'
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'drop'
        publishLocation: 'pipeline'
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Pipeline Artifact'
      inputs:
        targetPath: '${Build.ArtifactStagingDirectory}/dist/Frontend'
  - job:  Build_Node_Express_App
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.22.3'
      displayName: 'Install Node.js'    
    - task: Npm@1
      displayName: 'Install Dependencies'
      inputs:
        workingDir: backend
        verbose: false
    - task: ArchiveFiles@2
      displayName: 'Archive dist files'
      inputs:
        rootFolderOrFile: backend
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)_backend.zip'
        replaceExistingArchive: true
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifact'
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'drop'
        publishLocation: 'pipeline'
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Pipeline Artifact'
      inputs:
        targetPath: '${Build.ArtifactStagingDirectory}/Backend'